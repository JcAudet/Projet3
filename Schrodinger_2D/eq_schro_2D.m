function diff_f = eq_schro_2D (psy , pot)

global dx dy

dim=size(psy);
diff_f=zeros(dim(1),dim(2));

%% Cas limite x=1
diff_f(2:end-1,1) = 1i * ( ...
     ( psy(3:end,1) - 2 * psy(2:end-1,1) + psy(1:end-2,1) ) ./ ( 2*dx^2 ) ...
    +( psy(2:end-1,3) + psy(2:end-1,1) - 2 * psy(2:end-1,2) ) ./ ( 2*dy^2 ) ...
    -( pot(2:end-1,1).*psy(2:end-1,1) ) ...
    );

%% Cas limite x=end
diff_f(2:end-1,end) = 1i * ( ...
     ( psy(3:end,end) - 2 * psy(2:end-1,end) + psy(1:end-2,end) ) ./ ( 2*dx^2 ) ...
    +( psy(2:end-1,end-2) + psy(2:end-1,end) - 2 * psy(2:end-1,end-1) ) ./ ( 2*dy^2 ) ...
    -( pot(2:end-1,1).*psy(2:end-1,1) )...
    );

%% Cas limite x=1
diff_f(1,2:end-1) = 1i * ( ...
     ( psy(1,3:end) - 2 * psy(1,2:end-1) + psy(1,1:end-2) ) ./ ( 2*dx^2 ) ...
    +( psy(3,2:end-1) + psy(1,2:end-1) - 2 * psy(2,2:end-1) ) ./ ( 2*dy^2 ) ...
    -( pot(1,2:end-1).*psy(1,2:end-1) ) ...
    );

%% Cas limite y=end
diff_f(end,2:end-1) = 1i * ( ( psy(end,3:end) - 2 * psy(end,2:end-1) + psy(end,1:end-2) ) ./ ( 2*dx^2 )...
    +( psy(end-2,2:end-1) + psy(end,2:end-1) - 2 * psy(end-1,2:end-1) ) ./ ( 2*dy^2 )...
    - pot(end,2:end-1).*psy(end,2:end-1) );

diff_f(2:end-1,2:end-1) = 1i * (...
     ( psy(3:end,2:end-1) + psy(1:end-2,2:end-1) - 2 .* psy(2:end-1,2:end-1) ) ./ ( 2*dx^2 )...
    +( psy(2:end-1,3:end) + psy(2:end-1,1:end-2) - 2 .* psy(2:end-1,2:end-1) ) ./ ( 2*dy^2 ) ...
    - pot(2:end-1,2:end-1).*psy(2:end-1,2:end-1)...
    );

diff_f(end) = 1i * ( ( psy(end-2) - 2 * psy(end-1) + psy(end) ) ./ ( 2*dx^2 ) ...
    - pot(end)*psy(end));

% for i=2:dim(1)-1
%     for j=2:dim(2)-1
%         diff_f(i,j) = 1i * ( ( psy(i+1,j) + psy(i-1,j) - 2 * psy(i,j) ) ./ ( 2*dx^2 )...
%             +( psy(i,j+1) + psy(i,j-1) - 2 * psy(i,j) ) ./ ( 2*dy^2 ) ...
%             - pot(i,j)*psy(i,j) );
%     end
% end